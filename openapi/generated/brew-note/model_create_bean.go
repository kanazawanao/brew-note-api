/*
brew-note api

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CreateBean type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateBean{}

// CreateBean struct for CreateBean
type CreateBean struct {
	ProductionArea string `json:"productionArea"`
	Kind string `json:"kind"`
	RoastId int32 `json:"roastId"`
}

// NewCreateBean instantiates a new CreateBean object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateBean(productionArea string, kind string, roastId int32) *CreateBean {
	this := CreateBean{}
	this.ProductionArea = productionArea
	this.Kind = kind
	this.RoastId = roastId
	return &this
}

// NewCreateBeanWithDefaults instantiates a new CreateBean object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateBeanWithDefaults() *CreateBean {
	this := CreateBean{}
	return &this
}

// GetProductionArea returns the ProductionArea field value
func (o *CreateBean) GetProductionArea() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProductionArea
}

// GetProductionAreaOk returns a tuple with the ProductionArea field value
// and a boolean to check if the value has been set.
func (o *CreateBean) GetProductionAreaOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProductionArea, true
}

// SetProductionArea sets field value
func (o *CreateBean) SetProductionArea(v string) {
	o.ProductionArea = v
}

// GetKind returns the Kind field value
func (o *CreateBean) GetKind() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Kind
}

// GetKindOk returns a tuple with the Kind field value
// and a boolean to check if the value has been set.
func (o *CreateBean) GetKindOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Kind, true
}

// SetKind sets field value
func (o *CreateBean) SetKind(v string) {
	o.Kind = v
}

// GetRoastId returns the RoastId field value
func (o *CreateBean) GetRoastId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.RoastId
}

// GetRoastIdOk returns a tuple with the RoastId field value
// and a boolean to check if the value has been set.
func (o *CreateBean) GetRoastIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RoastId, true
}

// SetRoastId sets field value
func (o *CreateBean) SetRoastId(v int32) {
	o.RoastId = v
}

func (o CreateBean) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateBean) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["productionArea"] = o.ProductionArea
	toSerialize["kind"] = o.Kind
	toSerialize["roastId"] = o.RoastId
	return toSerialize, nil
}

type NullableCreateBean struct {
	value *CreateBean
	isSet bool
}

func (v NullableCreateBean) Get() *CreateBean {
	return v.value
}

func (v *NullableCreateBean) Set(val *CreateBean) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateBean) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateBean) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateBean(val *CreateBean) *NullableCreateBean {
	return &NullableCreateBean{value: val, isSet: true}
}

func (v NullableCreateBean) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateBean) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


